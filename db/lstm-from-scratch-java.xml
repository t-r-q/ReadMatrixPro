<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DDD)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setXValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DDD)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setYValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DDD)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>179</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::updateColourDistance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::changeColourValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::changeColourValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>changeColourValue</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::changeColourValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::fillRect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawAxisBars</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::fillRect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawHeatMap</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;[[D)V</methodDescription><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::fillRect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawTitle</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>191</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/geom/AffineTransform::rotate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawXValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>187</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/geom/AffineTransform::rotate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYLabel</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>191</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/geom/AffineTransform::rotate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::drawString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>drawYValues</mutatedMethod><methodDescription>(Ljava/awt/Graphics2D;)V</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>187</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setTransform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getAxisColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisLabelColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getAxisLabelColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisLabelsFont</mutatedMethod><methodDescription>()Ljava/awt/Font;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getAxisLabelsFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisThickness</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getAxisThickness</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisValuesColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getAxisValuesColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getAxisValuesFont</mutatedMethod><methodDescription>()Ljava/awt/Font;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getAxisValuesFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getBackgroundColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getBackgroundColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellColour</mutatedMethod><methodDescription>(DDD)Ljava/awt/Color;</methodDescription><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>136</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getCellColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getCellHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellSize</mutatedMethod><methodDescription>()Ljava/awt/Dimension;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getCellSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getCellWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getCellWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getChartHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>()Ljava/awt/Image;</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getChartImage</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::measureComponents</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::updateCoordinates</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setRenderingHint</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setColor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::fillRect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawTitle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawHeatMap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawXLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawYLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawAxisBars</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawXValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::drawYValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartImage</mutatedMethod><methodDescription>(Z)Ljava/awt/Image;</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>103</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getChartImage</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartMargin</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getChartMargin</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartSize</mutatedMethod><methodDescription>()Ljava/awt/Dimension;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getChartSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getChartWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getChartWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getColourPosition</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getColourPosition</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getColourPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getColourScale</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/visualization/HeatChart::getColourScale</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getHighValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/visualization/HeatChart::getHighValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getHighValueColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getHighValueColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getLowValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/visualization/HeatChart::getLowValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getLowValueColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getLowValueColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getTitle</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/visualization/HeatChart::getTitle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getTitleColour</mutatedMethod><methodDescription>()Ljava/awt/Color;</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getTitleColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getTitleFont</mutatedMethod><methodDescription>()Ljava/awt/Font;</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getTitleFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getXAxisLabel</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/visualization/HeatChart::getXAxisLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getXAxisValuesFrequency</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getXAxisValuesFrequency</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getXValues</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getXValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getYAxisLabel</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/visualization/HeatChart::getYAxisLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getYAxisValuesFrequency</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/visualization/HeatChart::getYAxisValuesFrequency</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getYValues</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getYValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>getZValues</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/HeatChart::getZValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isShowXAxisValues</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/visualization/HeatChart::isShowXAxisValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isShowXAxisValues</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/visualization/HeatChart::isShowXAxisValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isShowYAxisValues</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/visualization/HeatChart::isShowYAxisValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isShowYAxisValues</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/visualization/HeatChart::isShowYAxisValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isXValuesHorizontal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/visualization/HeatChart::isXValuesHorizontal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isXValuesHorizontal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/visualization/HeatChart::isXValuesHorizontal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isYValuesHorizontal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/visualization/HeatChart::isYValuesHorizontal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>isYValuesHorizontal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/visualization/HeatChart::isYValuesHorizontal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>62</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/visualization/HeatChart::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>220</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>306</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><block>59</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>59</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>410</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>428</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>438</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>441</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>45</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>306</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>367</index><block>60</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>389</index><block>63</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>172</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>measureComponents</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>252</index><block>46</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/awt/Graphics2D::setFont</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>([[D)D</methodDescription><lineNumber>1769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>62</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/visualization/HeatChart::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveGraphicJpeg</mutatedMethod><methodDescription>(Ljava/awt/image/BufferedImage;Ljava/io/File;F)V</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/imageio/ImageWriteParam::setCompressionMode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveGraphicJpeg</mutatedMethod><methodDescription>(Ljava/awt/image/BufferedImage;Ljava/io/File;F)V</methodDescription><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/imageio/ImageWriteParam::setCompressionQuality</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveGraphicJpeg</mutatedMethod><methodDescription>(Ljava/awt/image/BufferedImage;Ljava/io/File;F)V</methodDescription><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/imageio/ImageWriter::setOutput</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveGraphicJpeg</mutatedMethod><methodDescription>(Ljava/awt/image/BufferedImage;Ljava/io/File;F)V</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/imageio/ImageWriter::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveGraphicJpeg</mutatedMethod><methodDescription>(Ljava/awt/image/BufferedImage;Ljava/io/File;F)V</methodDescription><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/imageio/ImageWriter::dispose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::saveGraphicJpeg</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setBackgroundColour</mutatedMethod><methodDescription>(Ljava/awt/Color;)V</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setCellHeight</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setCellSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setCellWidth</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setCellSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setHighValueColour</mutatedMethod><methodDescription>(Ljava/awt/Color;)V</methodDescription><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::updateColourDistance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setLowValueColour</mutatedMethod><methodDescription>(Ljava/awt/Color;)V</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::updateColourDistance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setXValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setXValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setXValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setXValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setXValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setYValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setYValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setYValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setYValues</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>setZValues</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setZValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateColourDistance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateColourDistance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateColourDistance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateColourDistance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateColourDistance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HeatChart.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.HeatChart</mutatedClass><mutatedMethod>updateCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>2</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><block>4</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>2</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to Jama/Matrix::setMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to Jama/Matrix::setMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>clip</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>106</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::clip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><block>7</block><killingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>6</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>eye</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>eye</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><block>5</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>eye</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>eye</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>eye</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>6</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::eye</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)LJama/Matrix;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>([I)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>1</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/Batch::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>getColumns</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/Batch::getColumns</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>getDouble</mutatedMethod><methodDescription>([I)D</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>1</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced double return with 0.0d for ru/eventflow/neural/Batch::getDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>getRows</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/Batch::getRows</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/Batch::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::inverse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>manyMatrices</mutatedMethod><methodDescription>(III)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::manyMatrices</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>manyVectors</mutatedMethod><methodDescription>(II)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::manyVectors</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>6</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>10</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><block>11</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>12</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>6</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>90</index><block>13</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::mul</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>oneMatrix</mutatedMethod><methodDescription>(II)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::oneMatrix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>oneVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::oneVector</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>3</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>5</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>10</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><block>7</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><block>8</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>13</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>3</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>5</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>10</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to Jama/Matrix::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>12</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>ones</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>80</index><block>14</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::ones</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>5</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Exception::printStackTrace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>70</index><block>13</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::plus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::print</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to Jama/Matrix::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ILJama/Matrix;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>([ID)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>0</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to Jama/Matrix::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>rand</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>rand</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>5</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>rand</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>rand</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>4</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>rand</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>39</index><block>6</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::rand</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>1</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>43</index><block>2</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::scalar</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>([ID)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</succeedingTests><description>removed call to Jama/Matrix::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>shape</mutatedMethod><methodDescription>()[I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>0</block><killingTests>ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::shape</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>6</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>5</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>7</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::times</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>6</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><block>11</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>6</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>10</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>12</block><killingTests>ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneMatrix(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testOneMatrixOneVector(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoMatrices(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.BatchMatMulTest.testTwoMatricesTwoVectors(ru.eventflow.neural.BatchMatMulTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::times</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/Batch::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::transpose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>2</block><killingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><block>3</block><killingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>3</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>2</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>5</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>uniformDistributionVector</mutatedMethod><methodDescription>(I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>62</index><block>6</block><killingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::uniformDistributionVector</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>4</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>7</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>9</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>12</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>13</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><block>15</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>11</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>11</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>11</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>7</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>9</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>11</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to Jama/Matrix::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>xavier</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>98</index><block>16</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::xavier</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>Batch.java</sourceFile><mutatedClass>ru.eventflow.neural.Batch</mutatedClass><mutatedMethod>zeros</mutatedMethod><methodDescription>([I)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/Batch::zeros</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/util/List;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><block>14</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/util/List;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>14</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/util/List;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>5</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>removed call to ru/eventflow/neural/rnn/Parameters::populate</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/util/List;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/Parameters::populate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/util/List;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>7</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/rnn/Parameters::populateAttentionParameters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/rnn/Parameters;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>122</index><block>35</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::copy</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>13</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/Batch;)Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>82</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/rnn/Parameters::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>embedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>7</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>embedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>embedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>embedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>embedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>10</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::embedding</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;)Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>52</index><block>10</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/Parameters::getAll</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>23</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/Parameters::getAll</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/Parameters::getAll</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>getAll</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;)Ljava/util/Collection;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>47</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/Parameters::getAll</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>onehot</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>onehot</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>onehot</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>6</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>onehot</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>66</index><block>7</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Parameters::onehot</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>populateAttentionParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>3</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>populateAttentionParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;Lru/eventflow/neural/graph/Variable;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;Lru/eventflow/neural/graph/Variable;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;Lru/eventflow/neural/graph/Variable;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parameters.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Parameters</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/lang/String;Lru/eventflow/neural/graph/Variable;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IDIIIDDLjava/io/InputStream;Ljava/util/List;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::restoreSnapshot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IDIIIDDLjava/io/InputStream;Ljava/util/List;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Exception::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IDIIIDDLjava/io/InputStream;Ljava/util/List;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/System::exit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>buildEncoder</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>buildEncoder</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>buildEncoder</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>buildEncoder</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>70</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/EncoderDecoderEngine::buildEncoder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>restoreSnapshot</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>restoreSnapshot</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>restoreSnapshot</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>saveSnapshot</mutatedMethod><methodDescription>(Ljava/io/File;I)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/PersistenceUtils::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>toEmbedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>toEmbedding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/EncoderDecoderEngine::toEmbedding</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><block>51</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>57</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><block>58</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><block>48</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>51</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>321</index><block>57</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>342</index><block>59</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>200</index><block>37</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>209</index><block>39</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/concurrent/ExecutionException::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>226</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/InterruptedException::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>242</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::updateParameters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>248</index><block>45</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::updateParameters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>254</index><block>46</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::updateParameters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>260</index><block>47</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::updateParameters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>297</index><block>53</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::saveSnapshot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>303</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>train</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>314</index><block>56</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/IOException::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>updateParameters</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/util/Map;)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>23</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>updateParameters</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/util/Map;)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine</mutatedClass><mutatedMethod>updateParameters</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/Parameters$Type;Ljava/util/Map;)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/Parameters::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;DLru/eventflow/neural/rnn/Parameters;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;DLru/eventflow/neural/rnn/Parameters;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/HammingLoss::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>163</index><block>22</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><block>24</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>184</index><block>27</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>256</index><block>32</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>261</index><block>33</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>30</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>30</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>30</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><block>30</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>30</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>34</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>35</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>35</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>35</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><block>35</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>12</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><block>22</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>24</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><block>27</block><killingTests>ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>248</index><block>30</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/HammingLoss::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HammingLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.HammingLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>304</index><block>37</block><killingTests>ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/HammingLoss::getValue</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([I[Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Node::addParent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/BaseNode::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='21'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/graph/BaseNode::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced boolean return with false for ru/eventflow/neural/graph/BaseNode::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>6</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/graph/BaseNode::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>35</index><block>8</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced boolean return with true for ru/eventflow/neural/graph/BaseNode::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getChildren</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/graph/BaseNode::getChildren</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getColumns</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/graph/BaseNode::getColumns</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/BaseNode::getDualValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>71</index><block>15</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/BaseNode::getDualValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getParents</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/graph/BaseNode::getParents</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getPartials</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/BaseNode::getPartials</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getRows</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/graph/BaseNode::getRows</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/graph/BaseNode::getSize</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>replaced int return with 0 for ru/eventflow/neural/graph/BaseNode::hashCode</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>shape</mutatedMethod><methodDescription>()[I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/BaseNode::shape</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNode.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.BaseNode</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/graph/BaseNode::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>6</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>11</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>14</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>171</index><block>19</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>176</index><block>20</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>181</index><block>21</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>162</index><block>18</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>16</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>18</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>6</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>11</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>12</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>16</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><block>18</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Softmax::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>197</index><block>23</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Softmax::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>5</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>9</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>7</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>11</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>5</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Softmax.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Softmax</mutatedClass><mutatedMethod>softmax</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>109</index><block>12</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Softmax::softmax</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>8</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>10</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><block>16</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><block>17</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>112</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>15</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>15</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>15</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>15</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><block>18</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>8</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>192</index><block>20</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/CrossEntropyLoss::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>CrossEntropyLoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.CrossEntropyLoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>197</index><block>21</block><killingTests>ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/CrossEntropyLoss::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>8</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>10</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><block>20</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><block>21</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>17</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>19</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>19</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>19</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>19</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>22</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>22</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><block>19</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>184</index><block>24</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/MSELoss::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MSELoss.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.MSELoss</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>189</index><block>25</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/MSELoss::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>206</index><block>30</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>386</index><block>55</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>441</index><block>65</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>31</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><block>30</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>343</index><block>47</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>386</index><block>55</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>438</index><block>64</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>441</index><block>65</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>446</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>246</index><block>34</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>431</index><block>62</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>452</index><block>68</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>457</index><block>69</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>542</index><block>88</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VanillaDecoder.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.VanillaDecoder</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/NetworkFactory;Ljava/util/List;ZZ)Ljava/util/List;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>547</index><block>89</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/VanillaDecoder::decode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>76</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Flatten::applyChainRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Flatten::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Flatten.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Flatten</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>97</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Flatten::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([ILru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>4</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/FrobeniusNorm::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>7</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>10</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><block>17</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><block>20</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><block>13</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><block>24</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>12</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>12</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>22</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>20</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><block>22</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>212</index><block>27</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/FrobeniusNorm::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrobeniusNorm.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.FrobeniusNorm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>217</index><block>28</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/FrobeniusNorm::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/optimization/SimpleOptimization::populateCollections</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>5</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>7</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>123</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>5</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>7</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/optimization/SimpleOptimization::reset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>11</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><block>21</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/graph/Variable::setValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><block>25</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><block>26</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>populateCollections</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>populateCollections</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>populateCollections</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>populateCollections</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/optimization/SimpleOptimization::populateCollections</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>SimpleOptimization.java</sourceFile><mutatedClass>ru.eventflow.neural.optimization.SimpleOptimization</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>5</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/graph/Node::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>27</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>31</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>37</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/System::exit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>211</index><block>50</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/TrainRunner::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>227</index><block>53</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/cli/HelpFormatter::printHelp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>242</index><block>56</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(DLjava/io/File;IIIDLjava/io/File;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainRunner.java</sourceFile><mutatedClass>ru.eventflow.neural.TrainRunner</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(DLjava/io/File;IIIDLjava/io/File;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/rnn/EncoderDecoderEngine::train</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>9</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>15</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>9</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>16</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to Jama/Matrix::setMatrix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>85</index><block>18</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Matmul::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>92</index><block>20</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Matmul::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>11</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>14</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>163</index><block>22</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>11</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>17</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><block>20</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Matmul::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Matmul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Matmul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>199</index><block>28</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Matmul::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>block</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/IOException::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>buildGraph</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;Lru/eventflow/neural/graph/Node;)Ledu/uci/ics/jung/graph/DirectedGraph;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>buildGraph</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;Lru/eventflow/neural/graph/Node;)Ledu/uci/ics/jung/graph/DirectedGraph;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>buildGraph</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;Lru/eventflow/neural/graph/Node;)Ledu/uci/ics/jung/graph/DirectedGraph;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>buildGraph</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;Lru/eventflow/neural/graph/Node;)Ledu/uci/ics/jung/graph/DirectedGraph;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>70</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/ComputationGraphVisualizer::buildGraph</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>buildGraph</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Ledu/uci/ics/jung/graph/DirectedGraph;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/ComputationGraphVisualizer::buildGraph</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/VisualizationViewer::setGraphMouse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/JComboBox::addItemListener</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/control/DefaultModalGraphMouse::setMode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/RenderContext::setVertexLabelTransformer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/RenderContext::setVertexShapeTransformer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/renderers/Renderer::setVertexLabelRenderer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/RenderContext::setVertexFillPaintTransformer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to edu/uci/ics/jung/visualization/RenderContext::setEdgeShapeTransformer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>configureVisualizationViewer</mutatedMethod><methodDescription>(Ledu/uci/ics/jung/graph/DirectedGraph;)Ledu/uci/ics/jung/visualization/VisualizationViewer;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>105</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/ComputationGraphVisualizer::configureVisualizationViewer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer</mutatedClass><mutatedMethod>visualize</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/SwingUtilities::invokeLater</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>8</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>10</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>15</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>148</index><block>16</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>93</index><block>12</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>13</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>13</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>8</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>10</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><block>13</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>140</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Sigmoid::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sigmoid.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sigmoid</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>164</index><block>18</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Sigmoid::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>118</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>297</index><block>39</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><block>41</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>257</index><block>35</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>217</index><block>30</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>222</index><block>31</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>328</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EncoderDecoderEngine.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.EncoderDecoderEngine$ForwardBackwardTask</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/lang/Void;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>372</index><block>46</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/concurrent/atomic/DoubleAdder::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>5</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>6</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Transpose::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>16</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>19</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>21</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>25</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Transpose::getDualValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getDualValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>111</index><block>28</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Transpose::getDualValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>6</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Transpose::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Transpose.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Transpose</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>7</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Transpose::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>156</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>161</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>166</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Exp::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Exp.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Exp</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>182</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Exp::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>8</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>10</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>138</index><block>15</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>16</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>10</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>112</index><block>13</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>14</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Tanh::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tanh.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Tanh</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>159</index><block>18</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Tanh::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>8</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>10</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><block>13</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><block>16</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><block>17</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>13</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>14</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>15</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/ReLU::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ReLU.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.ReLU</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>151</index><block>19</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/ReLU::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>6</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>10</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>11</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Concat::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>10</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>21</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>21</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>23</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to Jama/Matrix::setMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Concat::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Concat.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Concat</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>121</index><block>25</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Concat::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setTitle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setCellSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setLowValueColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setHighValueColour</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setXValuesHorizontal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setXValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setAxisThickness</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setYValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::setChartMargin</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildHeatChart</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Lru/eventflow/neural/visualization/HeatChart;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>62</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/AttentionVisualizer::buildHeatChart</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>buildIcon</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)Ljavax/swing/Icon;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/AttentionVisualizer::buildIcon</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AttentionVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.AttentionVisualizer</mutatedClass><mutatedMethod>saveToFile</mutatedMethod><methodDescription>([[DDD[Ljava/lang/String;[Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/visualization/HeatChart::saveToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>7</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)</succeedingTests><description>removed call to ru/eventflow/neural/Batch::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>42</index><block>9</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Pack::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>10</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>13</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>13</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>removed call to Jama/Matrix::setMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Pack::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Pack.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Pack</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>85</index><block>17</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Pack::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>buildDecoderCell</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/LSTM;Lru/eventflow/neural/rnn/Attention;Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/rnn/DecoderCell;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::buildDecoderCell</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>buildEncoderCell</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/LSTM;Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/rnn/EncoderCell;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>1</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::buildEncoderCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>buildInitialDecoderCell</mutatedMethod><methodDescription>(Lru/eventflow/neural/rnn/LSTM;Lru/eventflow/neural/rnn/Attention;Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/rnn/DecoderCell;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::buildInitialDecoderCell</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>buildInitialEncoderCell</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/rnn/EncoderCell;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::buildInitialEncoderCell</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>c0</mutatedMethod><methodDescription>()Lru/eventflow/neural/graph/Placeholder;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>c0</mutatedMethod><methodDescription>()Lru/eventflow/neural/graph/Placeholder;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>47</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::c0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>getParameters</mutatedMethod><methodDescription>()Lru/eventflow/neural/rnn/Parameters;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::getParameters</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>h0</mutatedMethod><methodDescription>()Lru/eventflow/neural/graph/Placeholder;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>2</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NetworkFactory.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.NetworkFactory</mutatedClass><mutatedMethod>h0</mutatedMethod><methodDescription>()Lru/eventflow/neural/graph/Placeholder;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>47</index><block>3</block><killingTests>ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/NetworkFactory::h0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Average::applyChainRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>13</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>16</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Average::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Average</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>85</index><block>17</block><killingTests>ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Average::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>11</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Sum::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Sum::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Sum.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Sum</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>63</index><block>14</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Sum::getValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Attention.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Attention</mutatedClass><mutatedMethod>buildOutputNode</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>8</block><killingTests></killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Attention.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Attention</mutatedClass><mutatedMethod>buildOutputNode</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><block>12</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests>ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Attention.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Attention</mutatedClass><mutatedMethod>buildOutputNode</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><block>9</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to ru/eventflow/neural/graph/Placeholder::setValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Attention.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Attention</mutatedClass><mutatedMethod>buildOutputNode</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/graph/Node;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>251</index><block>15</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/rnn/Attention::buildOutputNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Attention.java</sourceFile><mutatedClass>ru.eventflow.neural.rnn.Attention</mutatedClass><mutatedMethod>getDistributions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/rnn/Attention::getDistributions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Variable.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Variable</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Variable::applyChainRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Variable.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Variable</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lru/eventflow/neural/graph/Variable;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Variable::copy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Variable.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Variable</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/graph/Variable::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Variable.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Variable</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests>ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Variable.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Variable</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>3</block><killingTests>ru.eventflow.neural.ComputationGraphTest.testMatrixVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testScalarVariable_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testVectorVariable(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testReLU(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testSumScalars_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumVectors_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testMatMul_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testSumMatrices_setValue(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testFrobeniusNorm(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testTransposePack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ReverseModeADTest.testSoftmax(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.ComputationGraphTest.testDotProduct(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.GradientCheckingTest.testTransposeGradientsWithSymmetricDifferences(ru.eventflow.neural.GradientCheckingTest)|ru.eventflow.neural.ComputationGraphTest.testDotProductWithMatrix(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Variable::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PersistenceUtils.java</sourceFile><mutatedClass>ru.eventflow.neural.PersistenceUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lru/eventflow/neural/rnn/Parameters;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/nustaq/serialization/FSTObjectInput::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PersistenceUtils.java</sourceFile><mutatedClass>ru.eventflow.neural.PersistenceUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lru/eventflow/neural/rnn/Parameters;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/PersistenceUtils::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PersistenceUtils.java</sourceFile><mutatedClass>ru.eventflow.neural.PersistenceUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/OutputStream;Lru/eventflow/neural/rnn/Parameters;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/nustaq/serialization/FSTObjectOutput::writeObject</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PersistenceUtils.java</sourceFile><mutatedClass>ru.eventflow.neural.PersistenceUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/OutputStream;Lru/eventflow/neural/rnn/Parameters;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/nustaq/serialization/FSTObjectOutput::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/JFrame::setPreferredSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/JFrame::setDefaultCloseOperation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/JFrame::pack</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to javax/swing/JFrame::setVisible</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Mul</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>3</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Mul::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Mul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Mul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Mul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Mul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Mul::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Mul.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Mul</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>53</index><block>7</block><killingTests>ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Mul::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Placeholder.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Placeholder</mutatedClass><mutatedMethod>applyChainRule</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Lru/eventflow/neural/Batch;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Placeholder::applyChainRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Placeholder.java</sourceFile><mutatedClass>ru.eventflow.neural.graph.Placeholder</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Lru/eventflow/neural/Batch;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>ru.eventflow.neural.PackTest.testPack(ru.eventflow.neural.PackTest)|ru.eventflow.neural.ReverseModeADTest.testAverage(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.CrossEntropyLossTest.testPositive(ru.eventflow.neural.CrossEntropyLossTest)|ru.eventflow.neural.ComputationGraphTest.testPack(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.ComputationGraphTest.testTransposeVector(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testOptimal(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testConcat(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.HammingLossTest.testExactValue(ru.eventflow.neural.HammingLossTest)|ru.eventflow.neural.ComputationGraphTest.testForwardPropagation(ru.eventflow.neural.ComputationGraphTest)|ru.eventflow.neural.SimpleOptimizationTest.testOptimizer(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.ReverseModeADTest.testMatMulGradients(ru.eventflow.neural.ReverseModeADTest)|ru.eventflow.neural.AttentionTest.testAttentionOutput(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testFrobeniusOptimization(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptron(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.RNNTest.testBuildComputationGraph(ru.eventflow.neural.RNNTest)|ru.eventflow.neural.LSTMTest.testBuildComputationGraph(ru.eventflow.neural.LSTMTest)|ru.eventflow.neural.AttentionTest.testFitAttentionWeights(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.SimpleOptimizationTest.testPerceptronWithSigmoidActivation(ru.eventflow.neural.SimpleOptimizationTest)|ru.eventflow.neural.AttentionTest.testAttentionLayer(ru.eventflow.neural.AttentionTest)|ru.eventflow.neural.LSTMTest.testBuildNetworkFromString(ru.eventflow.neural.LSTMTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/graph/Placeholder::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainingExample.java</sourceFile><mutatedClass>ru.eventflow.neural.dataset.TrainingExample</mutatedClass><mutatedMethod>getSource</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/dataset/TrainingExample::getSource</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrainingExample.java</sourceFile><mutatedClass>ru.eventflow.neural.dataset.TrainingExample</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for ru/eventflow/neural/dataset/TrainingExample::getTarget</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$HTMLTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for ru/eventflow/neural/visualization/ComputationGraphVisualizer$HTMLTransformer::transform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ComputationGraphVisualizer.java</sourceFile><mutatedClass>ru.eventflow.neural.visualization.ComputationGraphVisualizer$PaintTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lru/eventflow/neural/graph/Node;)Ljava/awt/Paint;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for ru/eventflow/neural/visualization/ComputationGraphVisualizer$PaintTransformer::transform</description></mutation>
</mutations>
