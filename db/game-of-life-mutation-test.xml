<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Removed assignment to member variable i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Removed assignment to member variable j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>13</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>13</index><block>1</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>13</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>13</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>13</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>11</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>5</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>9</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>5</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>21</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>36</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>46</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>51</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/Position::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>51</index><block>11</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/Position::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/Position::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>36</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/Position::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>46</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/Position::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>31</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>33</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>41</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>43</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field j</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>20</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>45</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>50</index><block>11</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>20</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>45</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>50</index><block>11</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>50</index><block>11</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>20</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>45</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>50</index><block>11</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>20</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>45</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>50</index><block>11</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>34</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>44</index><block>9</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>17</index><block>5</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>34</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>44</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>31</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>33</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>41</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>43</index><block>9</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>31</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>33</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>41</index><block>9</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>43</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>31</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>33</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>41</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>43</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>31</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldi</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>33</index><block>7</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldi</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>41</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldj</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>43</index><block>9</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldj</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced int return with 0 for com/javaadvent/mutation/Position::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field i</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field j</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>17</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer multiplication with modulus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer multiplication with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer multiplication with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>13</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with modulus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with -31</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 31 with 30</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field i</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>17</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field i</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field j</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>17</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field i</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>17</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldi</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldj</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>17</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to com/javaadvent/mutation/Position::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>mutated return of Object value for com/javaadvent/mutation/Position::lambda$neighbourPositions$0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced return value with null for com/javaadvent/mutation/Position::lambda$neighbourPositions$0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>14</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>15</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Replaced integer addition with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>10</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with modulus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>16</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with modulus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer field j</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>14</index><block>0</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>15</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>14</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>15</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field i</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer field j</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>14</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>15</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldi</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>9</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>12</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer fieldj</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>14</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>lambda$neighbourPositions$0</mutatedMethod><methodDescription>(I)Lcom/javaadvent/mutation/Position;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>15</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) integer array field</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::range</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::mapToObj</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Collectors::toList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::collect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>4</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/javaadvent/mutation/Position::neighbourPositions to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>19</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>19</index><block>4</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced return value with Collections.emptyList for com/javaadvent/mutation/Position::neighbourPositions</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>3</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>3</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>3</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Position.java</sourceFile><mutatedClass>com.javaadvent.mutation.Position</mutatedClass><mutatedMethod>neighbourPositions</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>3</index><block>0</block><killingTests>com.javaadvent.mutation.TestPosition.givenPosition_neighbourPositionsAreComputedCorrectly(com.javaadvent.mutation.TestPosition)|com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/HashSet::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable alive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to com/javaadvent/mutation/Position::neighbourPositions</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/stream/Stream::count</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>12</index><block>2</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>countNeighbours</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)J</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced long return with 0 for com/javaadvent/mutation/World::countNeighbours</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAlive</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collection::stream</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAlive</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/stream/Stream::allMatch</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAlive</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAlive</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/World::isAlive</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAlive</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/World::isAlive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>6</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to com/javaadvent/mutation/World::countNeighbours</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collections::singleton</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to com/javaadvent/mutation/World::isAlive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>31</index><block>8</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/World::isAliveNextGeneration</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>18</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Negated long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>28</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>24</index><block>6</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>24</index><block>6</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>28</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>24</index><block>6</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>24</index><block>6</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>28</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>10</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 3 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>19</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>24</index><block>6</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>28</index><block>7</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>17</index><block>4</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>12</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>17</index><block>4</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>21</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) long local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>18</index><block>5</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (a++) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) long local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>18</index><block>5</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (a--) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>18</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Incremented (++a) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>9</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>isAliveNextGeneration</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>18</index><block>5</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Decremented (--a) long local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$countNeighbours$1</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/Set::contains</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$countNeighbours$1</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$countNeighbours$1</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/World::lambda$countNeighbours$1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$countNeighbours$1</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/World::lambda$countNeighbours$1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$isAlive$2</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/Set::contains</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$isAlive$2</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$isAlive$2</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/World::lambda$isAlive$2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$isAlive$2</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/World::lambda$isAlive$2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$makeAlive$0</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$moveToNextGeneration$3</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to com/javaadvent/mutation/World::isAliveNextGeneration</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$moveToNextGeneration$3</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$moveToNextGeneration$3</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with false for com/javaadvent/mutation/World::lambda$moveToNextGeneration$3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>lambda$moveToNextGeneration$3</mutatedMethod><methodDescription>(Lcom/javaadvent/mutation/Position;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced boolean return with true for com/javaadvent/mutation/World::lambda$moveToNextGeneration$3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>makeAlive</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenPositionInWorld_countNeighbours(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenSurvivalPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenReproductionPosition__CellAliveNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenOverCrowdingPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenUnderPopulatedPosition__CellDeadNextGeneration(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/List::forEach</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/HashSet::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to com/javaadvent/mutation/World::isAliveNextGeneration</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>8</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>10</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to com/javaadvent/mutation/Position::neighbourPositions</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>11</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>12</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>13</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Collectors::toList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>14</block><killingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::collect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>15</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed call to java/util/Set::addAll</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>65</index><block>17</block><killingTests>com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)</succeedingTests><description>Removed assignment to member variable alive</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>47</index><block>12</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>World.java</sourceFile><mutatedClass>com.javaadvent.mutation.World</mutatedClass><mutatedMethod>moveToNextGeneration</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests>com.javaadvent.mutation.TestWorld.givenLoafWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenBlockWorld__WorldRemainsStill(com.javaadvent.mutation.TestWorld)|com.javaadvent.mutation.TestWorld.givenToadOscillator__WorldOscillates(com.javaadvent.mutation.TestWorld)</succeedingTests><description>equal to not equal</description></mutation>
</mutations>
