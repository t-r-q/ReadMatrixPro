<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/HashMap::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable responses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>Removed assignment to member variable requests</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to java/util/HashMap::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable responses</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable requests</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable sequential</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>22</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>22</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response::toBuilder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Lfeign/Response;)Lfeign/mock/MockClient;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Lfeign/mock/MockClient;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/Util::toByteArray</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/String::getBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;ILjava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::status</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::reason</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>4</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/Response$Builder::body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>5</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to feign/Response$Builder::status with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/Response$Builder::reason with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/Response$Builder::headers with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>4</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/Response$Builder::body with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>5</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>21</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)Lfeign/mock/MockClient;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey::create</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::executeSequential</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::executeAny</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>6</block><killingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/Response$Builder::protocolVersion</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::request</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>8</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>9</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::execute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>32</index><block>6</block><killingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/Response$Builder::protocolVersion with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>38</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to feign/Response$Builder::request with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>40</index><block>9</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>9</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::execute</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::create</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::executeSequential</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::executeAny</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::protocolVersion</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::request</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::build</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/concurrent/CompletableFuture::completedFuture</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::execute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>32</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to feign/Response$Builder::protocolVersion with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>38</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to feign/Response$Builder::request with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>41</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::execute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/Request$Options;Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>34</index><block>6</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::asList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/util/Map::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>9</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::getResponseBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>10</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::executeAny to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>13</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>35</index><block>7</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to java/util/Map::put with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>48</index><block>10</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>48</index><block>10</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::executeAny</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeAny</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>66</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::iterator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Iterator::hasNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Iterator::next</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::access$000</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::access$000</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>14</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::access$100</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>15</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::executeSequential to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable responseIterator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>77</index><block>15</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>77</index><block>15</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::executeSequential</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>56</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>63</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>56</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>63</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>63</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>25</index><block>5</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>56</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>63</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>56</index><block>11</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>63</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>19</index><block>4</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>47</index><block>10</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>19</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>executeSequential</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>47</index><block>10</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with 405</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>5</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::access$000</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>6</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/MockClient$RequestResponse::access$100</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>12</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::status</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>14</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::reason</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>15</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/Request::headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>16</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Response$Builder::headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>11</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>11</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>18</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::getResponseBuilder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to feign/Response$Builder::status with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>47</index><block>14</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/Response$Builder::reason with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>52</index><block>16</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/Response$Builder::headers with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>58</index><block>18</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>58</index><block>18</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::getResponseBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>44</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</succeedingTests><description>Substituted 404 with -404</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with 405</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>44</index><block>13</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 404 with 403</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>26</index><block>7</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>26</index><block>7</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>getResponseBuilder</mutatedMethod><methodDescription>(Lfeign/Request;Lfeign/mock/RequestKey;)Lfeign/Response$Builder;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>40</index><block>11</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with 205</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::noContent to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::noContent</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with -204</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with 205</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>noContent</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 204 with 203</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/mock/MockClient;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/mock/MockClient;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/mock/MockClient;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/mock/MockClient;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/mock/MockClient;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/Util::toByteArray</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/io/InputStream;)Lfeign/mock/MockClient;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/String::getBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/MockClient::ok with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Ljava/lang/String;)Lfeign/mock/MockClient;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with 201</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::ok to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to feign/mock/MockClient::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::ok</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with -200</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with 201</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>ok</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;[B)Lfeign/mock/MockClient;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 200 with 199</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>resetRequests</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>26</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>20</index><block>4</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>14</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>34</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::keySet</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>7</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>28</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>22</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>22</index><block>7</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>22</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>22</index><block>7</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyNever</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>22</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::verifyTimes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyOne to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::verifyOne</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/Request;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::verifyTimes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyOne to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockClient::verifyOne</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyOne</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;)Lfeign/Request;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>39</index><block>9</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::isEmpty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to java/util/Iterator::hasNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>19</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>19</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>37</index><block>9</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>19</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>19</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>37</index><block>9</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>30</index><block>8</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>30</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>25</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyStatus</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>25</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>61</index><block>12</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>102</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>17</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collections::emptyList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>8</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>9</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/Map::keySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>14</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>15</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyTimes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>108</index><block>22</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyTimes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/MockClient::verifyNever</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>69</index><block>14</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>108</index><block>22</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>108</index><block>22</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced return value with Collections.emptyList for feign/mock/MockClient::verifyTimes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>91</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>47</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>50</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>83</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>86</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>47</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>83</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>47</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>50</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>83</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>86</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>47</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>83</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>47</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>50</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>83</index><block>17</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>86</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>47</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>50</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>54</index><block>11</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>83</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>86</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>90</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>97</index><block>18</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>greater or equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>greater or equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>greater or equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>41</index><block>10</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>greater or equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>77</index><block>16</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>greater or equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>41</index><block>10</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>77</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>91</index><block>17</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>91</index><block>17</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>91</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;I)Ljava/util/List;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>91</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>89</index><block>21</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>122</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/VerificationAssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collections::emptyList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::entrySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>13</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map$Entry::getKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>14</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>16</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map$Entry::getValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/Map::keySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>23</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>119</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>120</index><block>27</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>69</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>97</index><block>24</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>69</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>97</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyTimes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>128</index><block>30</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockClient::verifyTimes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/MockClient::verifyNever</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>25</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>128</index><block>30</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>128</index><block>30</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for feign/mock/MockClient::verifyTimes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>96</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>111</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>75</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>78</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>106</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>75</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>82</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>75</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>78</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>82</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>106</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>75</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>82</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>75</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>78</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>82</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>106</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>75</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>78</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>82</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>106</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>110</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>117</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>greater or equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>97</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>greater or equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>54</index><block>15</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>97</index><block>24</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>greater or equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>97</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>greater or equal to equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>97</index><block>24</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>greater or equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>54</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>69</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>97</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>96</index><block>24</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>111</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>96</index><block>24</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>111</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>96</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>111</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>3</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>15</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>96</index><block>24</block><killingTests>feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient</mutatedClass><mutatedMethod>verifyTimes</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;I)Ljava/util/List;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>111</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Request::httpMethod</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Request$HttpMethod::name</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>3</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/HttpMethod::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>4</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey::buildUrl</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>5</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/Request::headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>6</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestHeaders::of</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/Request::charset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>8</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/Request::body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>4</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable method</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>5</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable url</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>7</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>8</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable charset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/Request;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>9</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::access$200</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::access$300</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::access$400</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::access$500</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>5</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestKey$Builder::access$600</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable method</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>3</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable url</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>4</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>5</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable charset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey$Builder;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>6</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable body</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>19</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/RuntimeException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/Request::url</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/nio/charset/Charset::name</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/net/URLDecoder::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::buildUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>7</index><block>2</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced call to java/net/URLDecoder::decode with argument</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>buildUrl</mutatedMethod><methodDescription>(Lfeign/Request;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>9</index><block>3</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/RequestKey::buildUrl</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey$Builder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::builder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfeign/Request;)Lfeign/mock/RequestKey;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfeign/Request;)Lfeign/mock/RequestKey;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfeign/Request;)Lfeign/mock/RequestKey;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfeign/Request;)Lfeign/mock/RequestKey;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced return value with null for feign/mock/RequestKey::create</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>15</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>10</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>58</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>58</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>30</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>47</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>66</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>75</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>75</index><block>16</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced boolean return with false for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>47</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>66</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>75</index><block>16</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>17</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>17</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>17</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>17</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>29</index><block>7</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>46</index><block>9</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>14</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>43</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>58</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>12</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>18</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>23</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>24</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>14</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/RequestKey::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed call to feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>10</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed call to java/nio/charset/Charset::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>16</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>2</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>3</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>8</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>45</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>68</index><block>14</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>71</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>91</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>93</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>95</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>3</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>45</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>68</index><block>14</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>71</index><block>15</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>91</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>93</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>95</index><block>22</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>103</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>108</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>103</index><block>25</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>108</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestKey::equalsExtended</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>90</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>92</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>94</index><block>22</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Negated integer local variable number 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>34</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>84</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>100</index><block>24</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>107</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>30</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>56</index><block>12</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>80</index><block>18</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>96</index><block>23</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>30</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>34</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>56</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>80</index><block>18</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>84</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>96</index><block>23</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>100</index><block>24</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>107</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>30</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>56</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>80</index><block>18</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>96</index><block>23</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>30</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>34</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>56</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>80</index><block>18</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>84</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>96</index><block>23</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>100</index><block>24</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>107</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>30</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>34</index><block>7</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>56</index><block>12</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>80</index><block>18</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>84</index><block>19</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>96</index><block>23</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>100</index><block>24</block><killingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>107</index><block>26</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>91</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>93</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>95</index><block>22</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>77</index><block>17</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>91</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>93</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>95</index><block>22</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>91</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>93</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>95</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>91</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>93</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>95</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>16</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>19</index><block>3</block><killingTests>feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>27</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>42</index><block>8</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>45</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>53</index><block>11</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>68</index><block>14</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>71</index><block>15</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>77</index><block>17</block><killingTests>feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>91</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>93</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>95</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>90</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>92</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>94</index><block>22</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (a++) integer local variable number 5</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>90</index><block>20</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>92</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>94</index><block>22</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Decremented (a--) integer local variable number 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>90</index><block>20</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>92</index><block>21</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>94</index><block>22</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Incremented (++a) integer local variable number 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>90</index><block>20</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>92</index><block>21</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>equalsExtended</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>94</index><block>22</block><killingTests>feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getBody</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::getBody to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getBody</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getBody</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey::getBody</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::getCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey::getCharset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getHeaders</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::getHeaders to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getHeaders</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getHeaders</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey::getHeaders</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getMethod</mutatedMethod><methodDescription>()Lfeign/mock/HttpMethod;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::getMethod to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getMethod</mutatedMethod><methodDescription>()Lfeign/mock/HttpMethod;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getMethod</mutatedMethod><methodDescription>()Lfeign/mock/HttpMethod;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey::getMethod</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getUrl</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::getUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getUrl</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>getUrl</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/RequestKey::getUrl</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to feign/mock/HttpMethod::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>5</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed call to java/lang/String::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>35</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>35</index><block>3</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>50</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>50</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>replaced int return with 0 for feign/mock/RequestKey::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>26</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>32</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>32</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>32</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with modulus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>26</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>32</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with modulus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>26</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>32</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>13</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>26</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with modulus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>32</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer multiplication with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Replaced integer addition with modulus</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>30</index><block>3</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -31</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -31</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with -31</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 32</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 30</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 30</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>17</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>30</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Substituted 31 with 30</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>36</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>16</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>35</index><block>3</block><killingTests>feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>12</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>31</index><block>3</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>29</index><block>2</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>52</index><block>8</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>5</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>9</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>10</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>11</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>12</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to java/lang/String::format</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>13</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestKey::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>64</index><block>12</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to java/lang/String::format with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>31</index><block>3</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>34</index><block>4</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>54</index><block>9</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>57</index><block>10</block><killingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>65</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>65</index><block>13</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/RequestKey::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 3 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 3 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 4 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 4 with -4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with -3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>4</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>12</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>17</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>40</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 3 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>22</index><block>0</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>45</index><block>6</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders$Builder;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestHeaders$Builder::access$200</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders$Builder;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestHeaders$Builder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders::builder to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestHeaders::builder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>8</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed call to java/util/Map::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>30</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>44</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>44</index><block>9</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>replaced boolean return with false for feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>44</index><block>9</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced boolean return with true for feign/mock/RequestHeaders::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>29</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>29</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>29</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>29</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>14</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>26</index><block>6</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)</succeedingTests><description>equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>fetch</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Collection;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>fetch</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Collection;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders::fetch to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>fetch</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Collection;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>fetch</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Collection;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>fetch</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Collection;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for feign/mock/RequestHeaders::fetch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestHeaders::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return value with null for feign/mock/RequestHeaders::of</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>removed call to java/util/Map::size</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromHeadersMap(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>replaced int return with 0 for feign/mock/RequestHeaders::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>3</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collection::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>18</index><block>3</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>5</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for feign/mock/RequestHeaders::sizeOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>10</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with 45</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with 33</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::entrySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>7</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>11</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/StringBuilder::length</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::length</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/StringBuilder::substring</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>12</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>15</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>16</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>27</index><block>7</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>31</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>51</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>56</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>51</index><block>15</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/RequestHeaders::toString</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>56</index><block>16</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/RequestHeaders::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD1Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Replaced integer operation with first member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOD2Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Replaced integer operation by second member</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR1Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR2Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR3Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Replaced integer subtraction with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.AOR4Mutator</mutator><index>49</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Replaced integer subtraction with modulus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with -44</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with -32</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with 45</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with 33</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>28</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 44 with 43</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>30</index><block>9</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 32 with 31</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>45</index><block>13</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>48</index><block>14</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Substituted 2 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Less or equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Less or equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Less or equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>41</index><block>12</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Less or equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>41</index><block>12</block><killingTests>feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Less or equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedHashMap::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>22</index><block>3</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::asList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/util/Map::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collection::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders$Builder::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>replaced call to java/util/Map::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>32</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>47</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::put with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>53</index><block>10</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestHeaders$Builder::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR1Mutator</mutator><index>18</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR2Mutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR3Mutator</mutator><index>18</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR4Mutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR5Mutator</mutator><index>18</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>15</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.CRCR6Mutator</mutator><index>18</index><block>2</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::containsKey</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collection::addAll</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>removed call to java/util/Map::put</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders$Builder::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::put with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>23</index><block>4</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>replaced call to java/util/Map::put with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>44</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>44</index><block>8</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestHeaders$Builder::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</succeedingTests><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Lfeign/mock/RequestHeaders$Builder;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests></succeedingTests><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/RequestHeaders::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestHeaders$Builder::build to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>RequestHeaders.java</sourceFile><mutatedClass>feign.mock.RequestHeaders$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestHeaders;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestHeadersTest.shouldReturnZeroSizeForUnknownKey(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValueAndCollection(feign.mock.RequestHeadersTest)|feign.mock.RequestHeadersTest.shouldPrintHeaders(feign.mock.RequestHeadersTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestHeadersTest.shouldCreateRequestHeadersFromSingleValue(feign.mock.RequestHeadersTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.RequestHeadersTest.shouldCreateEmptyRequestHeaders(feign.mock.RequestHeadersTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return value with null for feign/mock/RequestHeaders$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable method</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/HttpMethod;Ljava/lang/String;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable url</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>removed call to java/lang/String::getBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestKey$Builder::body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::body to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>1</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>replaced call to feign/mock/RequestKey$Builder::body with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([B)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::body to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([B)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)</succeedingTests><description>Removed assignment to member variable body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([B)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([B)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::body</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestKey;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>removed call to feign/mock/RequestKey::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestKey;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::build to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestKey;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lfeign/mock/RequestKey;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)</succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>charset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::charset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>charset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</succeedingTests><description>Removed assignment to member variable charset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>charset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>charset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::charset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::headers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Lfeign/mock/RequestHeaders;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>feign.mock.RequestKeyTest.equalNull(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalSelf(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalObject(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalPost(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToStringSimple(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalMinimum(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.builder(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.checkHashes(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtended(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.equalsExtendedExtra(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.testToString(feign.mock.RequestKeyTest)|feign.mock.RequestKeyTest.create(feign.mock.RequestKeyTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::headers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to feign/mock/RequestHeaders::of</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/RequestKey$Builder::headers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable headers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RequestKey.java</sourceFile><mutatedClass>feign.mock.RequestKey$Builder</mutatedClass><mutatedMethod>headers</mutatedMethod><methodDescription>(Ljava/util/Map;)Lfeign/mock/RequestKey$Builder;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/RequestKey$Builder::headers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Class;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockTargetTest.test(feign.mock.MockTargetTest)|feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable type</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/mock/MockTarget::url</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>removed call to feign/RequestTemplate::target</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>removed call to feign/RequestTemplate::request</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockTarget::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to feign/RequestTemplate::target with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>12</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfeign/RequestTemplate;)Lfeign/Request;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockTarget::apply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockTargetTest.test(feign.mock.MockTargetTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Class::getSimpleName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockTargetTest.test(feign.mock.MockTargetTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockTarget::name to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockTargetTest.test(feign.mock.MockTargetTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>feign.mock.MockTargetTest.test(feign.mock.MockTargetTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for feign/mock/MockTarget::name</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/lang/Class;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for feign/mock/MockTarget::type to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/lang/Class;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/lang/Class;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for feign/mock/MockTarget::type</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>url</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>mutated return of Object value for feign/mock/MockTarget::url to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>MockTarget.java</sourceFile><mutatedClass>feign.mock.MockTarget</mutatedClass><mutatedMethod>url</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>VerificationAssertionError.java</sourceFile><mutatedClass>feign.mock.VerificationAssertionError</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::format</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>VerificationAssertionError.java</sourceFile><mutatedClass>feign.mock.VerificationAssertionError</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)</killingTests><succeedingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)</succeedingTests><description>replaced call to java/lang/String::format with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient$RequestResponse</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)</succeedingTests><description>Removed assignment to member variable requestKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>MockClient.java</sourceFile><mutatedClass>feign.mock.MockClient$RequestResponse</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lfeign/mock/RequestKey;Lfeign/Response$Builder;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooLess(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.paramsEncoding(feign.mock.MockClientTest)|feign.mock.MockClientTest.resetRequests(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsCalledTooMany(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyMultipleRequests(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyInvocation(feign.mock.MockClientTest)|feign.mock.MockClientTest.hitMock(feign.mock.MockClientTest)|feign.mock.MockClientTest.verifyNone(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequests(feign.mock.MockClientSequentialTest)</killingTests><succeedingTests>feign.mock.MockClientTest.verifyNegative(feign.mock.MockClientTest)|feign.mock.MockClientSequentialTest.sequentialRequestsInWrongOrder(feign.mock.MockClientSequentialTest)|feign.mock.MockClientTest.verifyNotInvoked(feign.mock.MockClientTest)|feign.mock.MockClientTest.missHttpMethod(feign.mock.MockClientTest)|feign.mock.MockClientTest.missMock(feign.mock.MockClientTest)|feign.mock.HttpProtocolVersionTest.testMockProtocolVersion(feign.mock.HttpProtocolVersionTest)</succeedingTests><description>Removed assignment to member variable responseBuilder</description></mutation>
</mutations>
