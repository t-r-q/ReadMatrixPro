<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/LocalDate::of</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>2</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable date</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>8</index><block>1</block><killingTests>myDate.dateTestt.testYear(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Negated integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>9</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ABSMutator</mutator><index>10</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>Negated integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Incremented (a++) integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Incremented (a++) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI1Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Incremented (a++) integer local variable number 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Decremented (a--) integer local variable number 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Decremented (a--) integer local variable number 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI2Mutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Decremented (a--) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>8</index><block>1</block><killingTests>myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Incremented (++a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>9</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Incremented (++a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI3Mutator</mutator><index>10</index><block>1</block><killingTests>myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</succeedingTests><description>Incremented (++a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>8</index><block>1</block><killingTests>myDate.dateTestt.testYear(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Decremented (--a) integer local variable number 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>9</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)|myDate.dateTestt.testDay(myDate.dateTestt)</succeedingTests><description>Decremented (--a) integer local variable number 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.UOI4Mutator</mutator><index>10</index><block>1</block><killingTests>myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests>myDate.dateTestt.testMonth(myDate.dateTestt)|myDate.dateTestt.testMonthLength(myDate.dateTestt)|myDate.dateTestt.testYear(myDate.dateTestt)|myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</succeedingTests><description>Decremented (--a) integer local variable number 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/LocalDate::getDayOfMonth</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>myDate.dateTestt.testDay(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for myDate/date::getDayOfMonth</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/LocalDate::getMonthValue</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>myDate.dateTestt.testMonth(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for myDate/date::getMonth</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonthLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>myDate.dateTestt.testMonthLength(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/LocalDate::getMonth</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonthLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>myDate.dateTestt.testMonthLength(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/Month::maxLength</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonthLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getMonthLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>2</block><killingTests>myDate.dateTestt.testMonthLength(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for myDate/date::getMonthLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>myDate.dateTestt.testYear(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>removed call to java/time/LocalDate::getYear</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>myDate.dateTestt.testYear(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for myDate/date::getYear</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</succeedingTests><description>removed call to java/time/LocalDate::isLeapYear</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests>myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</succeedingTests><description>replaced boolean return with false for myDate/date::isLeapYear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>date.java</sourceFile><mutatedClass>myDate.date</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>myDate.dateTestt.testIsLeapYear(myDate.dateTestt)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for myDate/date::isLeapYear</description></mutation>
</mutations>
