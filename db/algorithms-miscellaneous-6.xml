<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>52</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>52</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable board</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable score</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>69</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::copyOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>26</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>26</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>39</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Arrays::copyOf with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable score</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[II)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable board</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>37</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::emptyCells to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>59</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>65</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>emptyCells</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>65</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/play2048/Board::emptyCells</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::deepEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>24</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>24</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getCell</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::getX</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getCell</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::getY</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getCell</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>55</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getCell</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Board::getCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getScore</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getScore</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Board::getScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::deepHashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Board::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Board::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>178</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>290</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>121</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>170</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>388</index><block>75</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>157</index><block>27</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>320</index><block>61</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>325</index><block>62</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>125</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>131</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>177</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>215</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>274</index><block>53</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>281</index><block>53</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>287</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>302</index><block>57</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><block>75</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>295</index><block>56</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>339</index><block>65</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>342</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>361</index><block>70</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>364</index><block>71</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::copyOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::transpose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::reverse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>151</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>152</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>176</index><block>31</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>182</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::pop</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>184</index><block>34</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>189</index><block>35</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::peek</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>191</index><block>36</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>222</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>223</index><block>43</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>234</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::pop</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>249</index><block>47</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>250</index><block>48</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>261</index><block>51</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::addAll</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>294</index><block>55</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>313</index><block>58</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::pop</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>315</index><block>59</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>347</index><block>67</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::reverse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>369</index><block>72</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::transpose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>72</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>75</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>206</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>295</index><block>56</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>339</index><block>65</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>342</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>361</index><block>70</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>364</index><block>71</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>72</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>75</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>206</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>295</index><block>56</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>339</index><block>65</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>342</index><block>66</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>361</index><block>70</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>364</index><block>71</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>116</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>142</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>178</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>290</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>116</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>142</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>178</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>290</index><block>54</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>389</index><block>76</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::move to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>32</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Arrays::copyOf with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>58</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::transpose with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>80</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::reverse with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>347</index><block>67</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::reverse with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>369</index><block>72</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::transpose with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>325</index><block>62</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>389</index><block>76</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Move;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>389</index><block>76</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Board::move</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::getX</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::getY</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::placeTile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>39</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>placeTile</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;I)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>39</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Board::placeTile</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::reverse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>63</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>69</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Board::reverse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::deepToString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/play2048/Board::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Board::transpose to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>58</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>64</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Board.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Board</mutatedClass><mutatedMethod>transpose</mutatedMethod><methodDescription>([[I)[[I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Board::transpose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>21</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>47</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::parallel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::mapToInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>101</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::sum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>84</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>104</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateFinalScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>104</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::calculateFinalScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Move::values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::parallel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::map</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::mapToInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/OptionalInt::orElse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>34</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/OptionalInt::orElse with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>16</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::map with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>calculateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::calculateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::calculateFinalScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::emptyCells</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::parallel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::flatMap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::mapToInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::sum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>37</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::flatMap with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>23</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>50</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::generateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>generateScore</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;I)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>50</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::generateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>13</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$6</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Human::lambda$calculateFinalScore$6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>13</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$7</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Human::lambda$calculateFinalScore$7</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$8</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$8</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$8</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::lambda$calculateFinalScore$8</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 250 with 251</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 750 with 751</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>130</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 50 with 51</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced long multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Collectors::toList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::collect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>91</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::count</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>132</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::mapToInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>135</index><block>27</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::sum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Math::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>72</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>145</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/Math::min with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>113</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>63</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>152</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateFinalScore$9</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>152</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::lambda$calculateFinalScore$9</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$4</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Human::lambda$calculateScore$4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$5</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::generateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$5</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Human::generateScore with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$5</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$calculateScore$5</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::lambda$calculateScore$5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/util/Pair::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>21</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/util/Pair::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::of</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Human::lambda$generateScore$2 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$2</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Cell;)Ljava/util/stream/Stream;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Stream.empty for com/baeldung/algorithms/play2048/Human::lambda$generateScore$2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0.9 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0.1 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/util/Pair::getFirst</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/util/Pair::getSecond</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::placeTile</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::calculateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/util/Pair::getSecond</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>28</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Human::calculateScore with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::placeTile with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>78</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$generateScore$3</mutatedMethod><methodDescription>(ILcom/baeldung/algorithms/play2048/Board;Lorg/apache/commons/math3/util/Pair;)I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>78</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::lambda$generateScore$3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$0</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;Lcom/baeldung/algorithms/play2048/Board;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/play2048/Human::lambda$makeMove$0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$1</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$1</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::generateScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$1</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Human::generateScore with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$1</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>lambda$makeMove$1</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Human::lambda$makeMove$1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Move::values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::parallel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::map</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::filter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Comparator::comparingInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Optional::orElse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Human::makeMove to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>31</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Optional::orElse with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>16</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::map with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::filter with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>35</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Human.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Human</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Human::makeMove</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>170</index><block>42</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>44</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>202</index><block>48</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>3</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>275</index><block>67</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>25</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>141</index><block>34</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>160</index><block>39</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>196</index><block>47</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>234</index><block>56</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><block>66</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>68</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>21</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>28</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>30</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>42</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>44</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><block>48</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>212</index><block>49</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>248</index><block>61</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::nodes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edges</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>7</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>9</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edges</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>15</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>16</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>17</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>18</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>19</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>20</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>23</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>24</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>97</index><block>25</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>26</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>27</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>32</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>139</index><block>33</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>34</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>143</index><block>35</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>36</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>153</index><block>37</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>158</index><block>38</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>161</index><block>39</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>162</index><block>40</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>41</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>216</index><block>50</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>218</index><block>51</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>223</index><block>52</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>225</index><block>53</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>231</index><block>54</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>233</index><block>55</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>235</index><block>56</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>236</index><block>57</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>238</index><block>58</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>244</index><block>59</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>247</index><block>60</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>253</index><block>62</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>255</index><block>63</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>257</index><block>64</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>258</index><block>65</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::putEdgeValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>84</index><block>21</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>107</index><block>28</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>120</index><block>30</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>212</index><block>49</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>248</index><block>61</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>84</index><block>21</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>107</index><block>28</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>120</index><block>30</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>212</index><block>49</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>248</index><block>61</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>26</index><block>5</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>33</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>170</index><block>42</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>182</index><block>44</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>202</index><block>48</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>26</index><block>5</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>33</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>170</index><block>42</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>182</index><block>44</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>202</index><block>48</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>271</index><block>66</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::union</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>72</index><block>19</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>78</index><block>20</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>98</index><block>26</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>143</index><block>35</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>162</index><block>40</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>236</index><block>57</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::edgeValueOrDefault with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>244</index><block>59</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>247</index><block>60</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/google/common/graph/MutableValueGraph;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>258</index><block>65</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::putEdgeValue with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>getMST</mutatedMethod><methodDescription>()Lcom/google/common/graph/MutableValueGraph;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/boruvka/BoruvkaMST::getMST to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>getMST</mutatedMethod><methodDescription>()Lcom/google/common/graph/MutableValueGraph;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>getMST</mutatedMethod><methodDescription>()Lcom/google/common/graph/MutableValueGraph;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/boruvka/BoruvkaMST::getMST</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>getTotalWeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>getTotalWeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/boruvka/BoruvkaMST::getTotalWeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/boruvka/BoruvkaMST::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>12</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>16</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoruvkaMST.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.BoruvkaMST</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>16</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/boruvka/BoruvkaMST::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Computer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>106</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Computer::makeMove</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Human::makeMove</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Computer::makeMove</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::emptyCells</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>108</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>112</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>100</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>100</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Play2048::printBoard</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Play2048::printBoard</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Play2048::printBoard</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Computer::makeMove with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Human::makeMove with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>79</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Computer::makeMove with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>108</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>111</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>136</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>88</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Cell::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>116</index><block>26</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>182</index><block>41</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>169</index><block>39</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 8 with 9</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 8 with 9</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>140</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::isEmpty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>24</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getCell</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>25</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>122</index><block>28</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::length</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>30</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>31</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::length</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::insert</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>184</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>186</index><block>43</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::getScore</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>187</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>188</index><block>45</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>100</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>100</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>61</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>81</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>124</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>136</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>61</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>81</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>124</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>136</index><block>32</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><block>35</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>161</index><block>37</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>38</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><block>40</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>189</index><block>46</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>33</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>50</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>129</index><block>30</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>142</index><block>33</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::insert with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>184</index><block>42</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>187</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Play2048.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Play2048</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>169</index><block>39</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>74</index><block>15</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/LinkedList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>3</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 123 with 124</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 91 with 92</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 40 with 41</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 125 with 126</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 93 with 94</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 41 with 42</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>19</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 123 with 124</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>20</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 91 with 92</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 40 with 41</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>29</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 123 with 124</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>30</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 125 with 126</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>33</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 91 with 92</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>34</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 93 with 94</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>146</index><block>37</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 40 with 41</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>149</index><block>38</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Substituted 41 with 42</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>41</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>19</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>20</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>29</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>30</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>33</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>34</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>37</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>38</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/lang/String::length</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::toCharArray</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>16</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::toCharArray</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>22</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Character::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>118</index><block>25</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/util/Deque::isEmpty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>121</index><block>27</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Deque::peekFirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>28</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/lang/Character::charValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>132</index><block>31</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Deque::peekFirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>32</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/lang/Character::charValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>143</index><block>35</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Deque::peekFirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>36</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/lang/Character::charValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>155</index><block>39</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/util/Deque::removeFirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>172</index><block>43</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/util/Deque::isEmpty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>8</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>9</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>56</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>99</index><block>19</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>102</index><block>20</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>105</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>119</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>125</index><block>29</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>128</index><block>30</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>136</index><block>33</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>139</index><block>34</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>147</index><block>37</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>150</index><block>38</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>56</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>99</index><block>19</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>102</index><block>20</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>105</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>119</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>125</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>128</index><block>30</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>136</index><block>33</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>139</index><block>34</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>147</index><block>37</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>150</index><block>38</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>112</index><block>23</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>removed call to java/util/Deque::addFirst</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>162</index><block>41</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>173</index><block>44</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>173</index><block>44</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingDeque::isBalanced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingDeque::isBalanced</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingDeque::isBalanced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>162</index><block>41</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingDeque::isBalanced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BalancedBracketsUsingDeque.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDeque</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>173</index><block>44</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingDequeUnitTest)</succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingDeque::isBalanced</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>breakCipher</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::chiSquares</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>breakCipher</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::probableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>breakCipher</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>breakCipher</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/caesarcipher/CaesarCipher::breakCipher</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>40</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/stat/inference/ChiSquareTest::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 26 with 27</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::length</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::expectedLettersFrequencies</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::decipher</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::observedLettersFrequencies</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to org/apache/commons/math3/stat/inference/ChiSquareTest::chiSquare</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/caesarcipher/CaesarCipher::chiSquares to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>28</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/caesarcipher/CaesarCipher::decipher with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>chiSquares</mutatedMethod><methodDescription>(Ljava/lang/String;)[D</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/caesarcipher/CaesarCipher::chiSquares</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 32 with 33</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 97 with 98</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 26 with 27</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 97 with 98</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::toCharArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/caesarcipher/CaesarCipher::cipher to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>56</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>66</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>78</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>cipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>78</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/caesarcipher/CaesarCipher::cipher</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::chars</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::filter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::count</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/IntStream::filter with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>countLetter</mutatedMethod><methodDescription>(CLjava/lang/String;)J</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/caesarcipher/CaesarCipher::countLetter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 26 with 27</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 26 with 27</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::cipher</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/caesarcipher/CaesarCipher::decipher to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>10</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/caesarcipher/CaesarCipher::cipher with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>decipher</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/caesarcipher/CaesarCipher::decipher</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Arrays::stream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/DoubleStream::map</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/DoubleStream::toArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/caesarcipher/CaesarCipher::expectedLettersFrequencies to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/DoubleStream::map with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>expectedLettersFrequencies</mutatedMethod><methodDescription>(I)[D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/caesarcipher/CaesarCipher::expectedLettersFrequencies</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>13</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$countLetter$1</mutatedMethod><methodDescription>(CI)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/caesarcipher/CaesarCipher::lambda$countLetter$1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$expectedLettersFrequencies$2</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$expectedLettersFrequencies$2</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive double value with (x != NaN)? -(x + 1) : -1 </description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$expectedLettersFrequencies$2</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for com/baeldung/algorithms/caesarcipher/CaesarCipher::lambda$expectedLettersFrequencies$2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$observedLettersFrequencies$0</mutatedMethod><methodDescription>(Ljava/lang/String;I)J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/caesarcipher/CaesarCipher::countLetter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$observedLettersFrequencies$0</mutatedMethod><methodDescription>(Ljava/lang/String;I)J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>lambda$observedLettersFrequencies$0</mutatedMethod><methodDescription>(Ljava/lang/String;I)J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/caesarcipher/CaesarCipher::lambda$observedLettersFrequencies$0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 97 with 98</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 122 with 123</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::rangeClosed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/IntStream::mapToLong</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/LongStream::toArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/caesarcipher/CaesarCipher::observedLettersFrequencies to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>observedLettersFrequencies</mutatedMethod><methodDescription>(Ljava/lang/String;)[J</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/caesarcipher/CaesarCipher::observedLettersFrequencies</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>45</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CaesarCipher.java</sourceFile><mutatedClass>com.baeldung.algorithms.caesarcipher.CaesarCipher</mutatedClass><mutatedMethod>probableOffset</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>59</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/caesarcipher/CaesarCipher::probableOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Lcom/baeldung/algorithms/minheapmerge/HeapNode;)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::heapifyFromLastLeafsParent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Lcom/baeldung/algorithms/minheapmerge/HeapNode;)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable heapNodes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getLeftNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/minheapmerge/MinHeap::getLeftNodeIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getParentNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/minheapmerge/MinHeap::getParentNodeIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRightNodeIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/minheapmerge/MinHeap::getRightNodeIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRootNode</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/minheapmerge/HeapNode;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRootNode</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/minheapmerge/HeapNode;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/minheapmerge/MinHeap::getRootNode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRootNode</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/minheapmerge/HeapNode;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>getRootNode</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/minheapmerge/HeapNode;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/minheapmerge/MinHeap::getRootNode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>5</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>6</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>3</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>5</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::getLeftNodeIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::getRightNodeIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>67</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>67</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>34</index><block>3</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>46</index><block>5</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>57</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>34</index><block>3</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>46</index><block>5</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>57</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>9</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::swap</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::heapify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/minheapmerge/MinHeap::getLeftNodeIndex with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapify</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/minheapmerge/MinHeap::getRightNodeIndex with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><block>4</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::getParentNodeIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>13</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::heapify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</succeedingTests><description>replaced call to com/baeldung/algorithms/minheapmerge/MinHeap::getParentNodeIndex with argument</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromLastLeafsParent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>21</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>heapifyFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::heapify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/HeapNode::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>58</index><block>4</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><block>3</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>126</index><block>12</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>2</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>5</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>9</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>10</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2147483647 with -2147483648</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>3</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>9</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>7</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::getRootNode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>73</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>73</index><block>6</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>8</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>132</index><block>13</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/minheapmerge/MinHeap::merge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>11</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/minheapmerge/MinHeap::heapifyFromRoot</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>109</index><block>9</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable nextElementIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>111</index><block>9</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable element</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>118</index><block>10</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable element</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>132</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinHeap.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.MinHeap</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>([[I)[I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>132</index><block>13</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/minheapmerge/MinHeap::merge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::initDisjointSets</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>6</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>7</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::unionByRank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind with argument</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>35</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>22</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/kruskal/CycleDetector::detectCycle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>detectCycle</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>35</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/kruskal/CycleDetector::detectCycle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::getParentNode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/CycleDetector::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/CycleDetector::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/CycleDetector::find with argument</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>20</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>20</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Integer return value with 0 for com/baeldung/algorithms/kruskal/CycleDetector::find</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>27</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced Integer return value with 0 for com/baeldung/algorithms/kruskal/CycleDetector::find</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>26</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::&#60;init&#62;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>initDisjointSets</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable nodes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::getParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to java/lang/Integer::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>6</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::find</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>7</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>30</index><block>6</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/CycleDetector::find with argument</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>40</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>24</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Integer return value with 0 for com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>pathCompressionFind</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Integer;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>40</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Integer return value with 0 for com/baeldung/algorithms/kruskal/CycleDetector::pathCompressionFind</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/lang/Integer;Ljava/lang/Integer;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::getRank</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::getRank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>5</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>6</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setParentNode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>9</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CycleDetector.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.CycleDetector</mutatedClass><mutatedMethod>unionByRank</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setRank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>3</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 123 with 124</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 91 with 92</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 40 with 41</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 125 with 126</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 93 with 94</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Substituted 41 with 42</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>27</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>28</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed call to java/lang/String::length</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::toCharArray</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>15</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed call to java/lang/String::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>17</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed call to java/lang/String::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>19</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed call to java/lang/String::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::replaceAll</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>22</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::replaceAll</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>23</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::replaceAll</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>107</index><block>25</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed call to java/lang/String::length</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>7</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>8</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>9</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>10</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>56</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>12</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>75</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>83</index><block>20</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>2</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>7</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>8</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>9</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>10</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>56</index><block>11</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>12</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>75</index><block>16</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>18</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>83</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>26</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>90</index><block>21</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>replaced call to java/lang/String::replaceAll with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>95</index><block>22</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>replaced call to java/lang/String::replaceAll with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>100</index><block>23</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>replaced call to java/lang/String::replaceAll with argument</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>90</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/String::replaceAll with receiver</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>95</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/String::replaceAll with receiver</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>100</index><block>23</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/String::replaceAll with receiver</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>15</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>116</index><block>29</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenInvalidCharacterString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenNullInput_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenOddLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingString::isBalanced</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>63</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingString::isBalanced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BalancedBracketsUsingString.java</sourceFile><mutatedClass>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingString</mutatedClass><mutatedMethod>isBalanced</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>116</index><block>29</block><killingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthUnbalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenUnBalancedString_whenCheckingForBalance_shouldReturnFalse(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEmptyString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenAnotherBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)|com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest.givenEvenLengthBalancedString_whenCheckingForBalance_shouldReturnTrue(com.baeldung.algorithms.balancedbrackets.BalancedBracketsUsingStringUnitTest)</succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/balancedbrackets/BalancedBracketsUsingString::isBalanced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$0</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraph::edgeValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$0</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Optional::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$0</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/Kruskal::lambda$spanningTree$0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$0</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$0</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Double return value with 0 for com/baeldung/algorithms/kruskal/Kruskal::lambda$spanningTree$0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$1</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraph::edgeValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$1</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Optional::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$1</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/Kruskal::lambda$spanningTree$1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$1</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>lambda$spanningTree$1</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Lcom/google/common/graph/EndpointPair;)Ljava/lang/Double;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Double return value with 0 for com/baeldung/algorithms/kruskal/Kruskal::lambda$spanningTree$1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/Kruskal::spanningTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/Kruskal::maxSpanningTree to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/Kruskal::spanningTree with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>maxSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/kruskal/Kruskal::maxSpanningTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/Kruskal::spanningTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/Kruskal::minSpanningTree to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/kruskal/Kruskal::spanningTree with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>minSpanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/kruskal/Kruskal::minSpanningTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>46</index><block>11</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>12</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>22</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>29</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraph::edges</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>3</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Comparator::comparing</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Comparator::comparing</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Collections::reverseOrder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>9</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraph::nodes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>10</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>12</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraphBuilder::undirected</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>13</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraphBuilder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>19</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>20</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>21</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/CycleDetector::detectCycle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>24</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeU</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>25</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/EndpointPair::nodeV</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>97</index><block>26</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/ValueGraph::edgeValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>27</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Optional::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>28</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/google/common/graph/MutableValueGraph::putEdgeValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>81</index><block>22</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>111</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>2</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>81</index><block>22</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>111</index><block>29</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>123</index><block>32</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/Kruskal::spanningTree to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>8</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>32</index><block>7</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/Collections::reverseOrder with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>100</index><block>28</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/google/common/graph/MutableValueGraph::putEdgeValue with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>104</index><block>29</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>123</index><block>32</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Kruskal.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.Kruskal</mutatedClass><mutatedMethod>spanningTree</mutatedMethod><methodDescription>(Lcom/google/common/graph/ValueGraph;Z)Lcom/google/common/graph/ValueGraph;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>123</index><block>32</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/kruskal/Kruskal::spanningTree</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable currentLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable maxLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable tc</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;I)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable currentLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>69</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/NonGreedyAlgorithm::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>110</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialConnector::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getUsername</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/NonGreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>105</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>105</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>36</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable currentLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>82</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>117</index><block>20</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed increment -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>125</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>130</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>125</index><block>21</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/NonGreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NonGreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.NonGreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>130</index><block>22</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/NonGreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>20</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable isCounterEnabled</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable counter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable users</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/IllegalStateException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>62</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getUsername</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/SocialConnector::getFollowers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/SocialConnector::getFollowers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable counter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>52</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>63</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>52</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/greedy/SocialConnector::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>63</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/greedy/SocialConnector::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getUsers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/SocialConnector::getUsers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getUsers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>getUsers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/greedy/SocialConnector::getUsers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>setUsers</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable users</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable isCounterEnabled</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>19</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>19</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/greedy/SocialConnector::switchCounter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialConnector.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialConnector</mutatedClass><mutatedMethod>switchCounter</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>19</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/greedy/SocialConnector::switchCounter</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Substituted 1.0E-6 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Removed assignment to member variable precision</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>5</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>9</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0.1 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Substituted 100 with 101</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>4</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1.0E-6 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>10</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>68</index><block>10</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>10</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>4</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>5</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>9</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>0</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>1</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/function/Function::apply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>6</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>7</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/function/Function::apply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>8</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>11</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StrictMath::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>4</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>46</index><block>5</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>64</index><block>9</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>46</index><block>5</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>64</index><block>9</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>22</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>replaced call to java/util/function/Function::apply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>55</index><block>7</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/function/Function::apply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>94</index><block>11</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StrictMath::abs with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>6</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</succeedingTests><description>Removed increment -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>103</index><block>13</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of primitive double value with (x != NaN)? -(x + 1) : -1 </description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GradientDescent.java</sourceFile><mutatedClass>com.baeldung.algorithms.gradientdescent.GradientDescent</mutatedClass><mutatedMethod>findLocalMinimum</mutatedMethod><methodDescription>(Ljava/util/function/Function;D)D</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>103</index><block>13</block><killingTests>com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest.givenFunction_whenStartingPointIsOne_thenLocalMinimumIsFound(com.baeldung.algorithms.gradientdescent.GradientDescentUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced double return with 0.0d for com/baeldung/algorithms/gradientdescent/GradientDescent::findLocalMinimum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable accounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>addCount</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>addCount</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable count</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>addFollower</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/Follower::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>addFollower</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>getAccounts</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/FollowersPath::getAccounts to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>getAccounts</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>getAccounts</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/greedy/FollowersPath::getAccounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/FollowersPath::getCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>24</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>42</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/Follower::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>18</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/FollowersPath::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>26</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>31</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>47</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>49</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>51</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>53</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>55</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FollowersPath.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.FollowersPath</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>55</index><block>19</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/greedy/FollowersPath::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable x</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable y</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Cell::getX</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/play2048/Cell::getY</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/StringJoiner::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>19</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>29</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Class::getSimpleName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/StringJoiner::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/StringJoiner::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>16</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/StringJoiner::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Cell::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>24</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>26</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/StringJoiner::add with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>31</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>34</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>36</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/StringJoiner::add with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>38</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Cell</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>38</index><block>17</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/play2048/Cell::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::getNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>1</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>1</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>5</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::setNext</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/linkedlist/ListNode::getNext with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>39</index><block>5</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseList</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>39</index><block>5</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::getNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>5</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::getNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>6</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::getNext</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>3</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>3</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>4</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>10</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>8</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::setNext</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>9</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/linkedlist/ListNode::setNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>25</index><block>6</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>2</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/linkedlist/ListNode::getNext with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>24</index><block>5</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/linkedlist/ListNode::getNext with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>30</index><block>7</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/linkedlist/ListNode::getNext with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>18</index><block>4</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>41</index><block>10</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedListReversal.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.LinkedListReversal</mutatedClass><mutatedMethod>reverseListRecursive</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>10</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/linkedlist/LinkedListReversal::reverseListRecursive</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>25</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/FollowersPath::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable currentLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable maxLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable sc</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/greedy/SocialConnector;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable fp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialConnector::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getFollowersCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getUsername</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/GreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>40</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>59</index><block>10</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>67</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable currentLevel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>80</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>85</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>80</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/GreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>findMostFollowersPath</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>85</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/GreedyAlgorithm::findMostFollowersPath</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/greedy/FollowersPath;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/GreedyAlgorithm::getFollowers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/greedy/FollowersPath;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GreedyAlgorithm.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.GreedyAlgorithm</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/greedy/FollowersPath;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/greedy/GreedyAlgorithm::getFollowers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>3</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>3</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable parents</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable ranks</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>22</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>6</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>8</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>6</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/boruvka/UnionFind::find</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>2</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>4</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>52</index><block>6</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>4</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>52</index><block>6</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnionFind.java</sourceFile><mutatedClass>com.baeldung.algorithms.boruvka.UnionFind</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>11</index><block>1</block><killingTests>com.baeldung.algorithms.boruvka.BoruvkaUnitTest.givenInputGraph_whenBoruvkaPerformed_thenMinimumSpanningTree(com.baeldung.algorithms.boruvka.BoruvkaUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/boruvka/UnionFind::find with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>6</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>11</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>1</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><block>13</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><block>16</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>4</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>6</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>11</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>5</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>7</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>8</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>9</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>10</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>14</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::remove</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>15</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>6</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>49</index><block>11</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>6</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>49</index><block>11</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>17</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/topkelements/BruteForceTopKElementsFinder::findTopK to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>71</index><block>16</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>77</index><block>17</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BruteForceTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.BruteForceTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>77</index><block>17</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenBruteForceFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/topkelements/BruteForceTopKElementsFinder::findTopK</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable username</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable count</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/Follower::getCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/Follower::getUsername to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/greedy/Follower::getUsername</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>6</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/Follower::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>12</index><block>3</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>5</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>19</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Follower.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.Follower</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>19</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/greedy/Follower::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/security/SecureRandom::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable rng</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 0.9 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>12</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>13</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::emptyCells</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/security/SecureRandom::nextDouble</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/security/SecureRandom::nextInt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>9</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/play2048/Board::placeTile</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>11</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/play2048/Computer::makeMove to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><index>33</index><block>8</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to java/security/SecureRandom::nextInt with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>63</index><block>14</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced call to com/baeldung/algorithms/play2048/Board::placeTile with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>64</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Computer.java</sourceFile><mutatedClass>com.baeldung.algorithms.play2048.Computer</mutatedClass><mutatedMethod>makeMove</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/play2048/Board;)Lcom/baeldung/algorithms/play2048/Board;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>15</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/play2048/Computer::makeMove</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable username</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable followers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable username</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable followers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>addFollowers</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::addAll</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/greedy/SocialUser::getUsername</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for com/baeldung/algorithms/greedy/SocialUser::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>2</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for com/baeldung/algorithms/greedy/SocialUser::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/SocialUser::getFollowers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowers</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/greedy/SocialUser::getFollowers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowersCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowersCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of primitive long value with x + 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getFollowersCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced long return with 0 for com/baeldung/algorithms/greedy/SocialUser::getFollowersCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/greedy/SocialUser::getUsername to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SocialUser.java</sourceFile><mutatedClass>com.baeldung.algorithms.greedy.SocialUser</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &#34;&#34; for com/baeldung/algorithms/greedy/SocialUser::getUsername</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/PriorityQueue::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>19</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>4</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/topkelements/MaxHeapTopKElementsFinder::findTopK to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/List::forEach</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</succeedingTests><description>removed call to java/util/Collections::reverse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>28</index><block>4</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>28</index><block>4</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/topkelements/MaxHeapTopKElementsFinder::findTopK</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/PriorityQueue::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/PriorityQueue::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/PriorityQueue::poll</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MaxHeapTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.MaxHeapTopKElementsFinder</mutatedClass><mutatedMethod>lambda$findTopK$0</mutatedMethod><methodDescription>(Ljava/util/PriorityQueue;ILjava/lang/Integer;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayNonDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)|com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenMaxHeapFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>1</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/TreeSet::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Comparator::reverseOrder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Set::addAll</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/Set::stream</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::limit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>5</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Collectors::toList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>6</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/stream/Stream::collect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>7</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/topkelements/TreeSetTopKElementsFinder::findTopK to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>4</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced call to java/util/stream/Stream::limit with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>24</index><block>7</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeSetTopKElementsFinder.java</sourceFile><mutatedClass>com.baeldung.algorithms.topkelements.TreeSetTopKElementsFinder</mutatedClass><mutatedMethod>findTopK</mutatedMethod><methodDescription>(Ljava/util/List;I)Ljava/util/List;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>24</index><block>7</block><killingTests>com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest.givenArrayDistinctIntegers_whenTreeSetFindTopK_thenReturnKLargest(com.baeldung.algorithms.topkelements.TopKElementsFinderUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for com/baeldung/algorithms/topkelements/TreeSetTopKElementsFinder::findTopK</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>removed call to com/baeldung/algorithms/kruskal/DisjointSetInfo::setRank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>getParentNode</mutatedMethod><methodDescription>()Ljava/lang/Integer;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/kruskal/DisjointSetInfo::getParentNode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>getParentNode</mutatedMethod><methodDescription>()Ljava/lang/Integer;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>getParentNode</mutatedMethod><methodDescription>()Ljava/lang/Integer;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced Integer return value with 0 for com/baeldung/algorithms/kruskal/DisjointSetInfo::getParentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>getRank</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>getRank</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/kruskal/DisjointSetInfo::getRank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>setParentNode</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable parentNode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DisjointSetInfo.java</sourceFile><mutatedClass>com.baeldung.algorithms.kruskal.DisjointSetInfo</mutatedClass><mutatedMethod>setRank</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMinimumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)|com.baeldung.algorithms.kruskal.KruskalUnitTest.givenGraph_whenMaximumSpanningTree_thenOutputCorrectResult(com.baeldung.algorithms.kruskal.KruskalUnitTest)</succeedingTests><description>Removed assignment to member variable rank</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable data</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests></killingTests><succeedingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</succeedingTests><description>Removed assignment to member variable next</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return of primitive boolean/byte/short/integer value with (x == 1) ? 0 : x + 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for com/baeldung/algorithms/linkedlist/ListNode::getData</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>getNext</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>mutated return of Object value for com/baeldung/algorithms/linkedlist/ListNode::getNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>getNext</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ReturnValuesMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return of object reference value with [see docs for details]</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>getNext</mutatedMethod><methodDescription>()Lcom/baeldung/algorithms/linkedlist/ListNode;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for com/baeldung/algorithms/linkedlist/ListNode::getNext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>setData</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests></killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable data</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.linkedlist.ListNode</mutatedClass><mutatedMethod>setNext</mutatedMethod><methodDescription>(Lcom/baeldung/algorithms/linkedlist/ListNode;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenRecursiveReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)|com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest.givenLinkedList_whenIterativeReverse_thenOutputCorrectResult(com.baeldung.algorithms.linkedlist.LinkedListReversalUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable next</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HeapNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.HeapNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HeapNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.HeapNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable nextElementIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HeapNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.HeapNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable element</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HeapNode.java</sourceFile><mutatedClass>com.baeldung.algorithms.minheapmerge.HeapNode</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTests>com.baeldung.algorithms.minheapmerge.MinHeapUnitTest.givenSortedArrays_whenMerged_thenShouldReturnASingleSortedarray(com.baeldung.algorithms.minheapmerge.MinHeapUnitTest)</killingTests><succeedingTests></succeedingTests><description>Removed assignment to member variable arrayIndex</description></mutation>
</mutations>
